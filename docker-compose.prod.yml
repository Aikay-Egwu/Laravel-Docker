version: '3.9'

networks:
  aikay:

services:
  server:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        - NGINXUSER=${NGINXUSER:-www-data}
        - NGINXGROUP=${NGINXGROUP:-www-data}
    container_name: nginx_service
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - database
      - php
#      - redis
      - mailhog
    networks:
      - aikay

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: php_service
    volumes:
      - ./src:/var/www/html:delegated
    ports:
      - "9001:9000"
    networks:
      - aikay
  
  database:
    image: mysql:8
    container_name: db_service
    restart: unless-stopped
    tty: true
    ports:
      - '${DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    networks:
      - aikay
    volumes:
      - ./mysqldb:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin
    restart: unless-stopped
    ports:
      - 8181:80
    environment:
      PMA_HOST: database
      PMA_USER: '${DB_USERNAME}'
      PMA_PASSWORD: '${DB_PASSWORD}'
    networks:
      - aikay
    depends_on:
      - database
    container_name: phpmyadmin_service

  artisan:
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: artisan_service
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - database
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - aikay

  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - ./redis:/data
    networks:
      - aikay
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
    container_name: redis_service

  meilisearch:
    image: 'getmeili/meilisearch:latest'
    ports:
      - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    volumes:
      - ./meilisearch:/data.ms
    networks:
      - aikay
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
      retries: 3
      timeout: 5s
    container_name: mailisearch_service

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - aikay
    container_name: mailhog_service