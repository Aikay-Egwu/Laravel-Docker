version: '3.8'

networks:
  laravel:

services:
  server:
    build:
      context: ./configs/server
      dockerfile: Dockerfile
      args:
        - NGINXUSER=${NGINXUSER:-www-data}
        - NGINXGROUP=${NGINXGROUP:-www-data}
    container_name: nginx_server
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - mysql
      - redis
    networks:
      - laravel
  
  mysql:
    image: mysql:5.7.29
    container_name: mysql_compose
    restart: unless-stopped
    tty: true
    ports:
      - 3406:3306
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    networks:
      - laravel
    volumes:
      - ./mysql:/var/lib/mysql
  
  php:
    build:
      context: ./configs/php
      dockerfile: Dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: php_compose
    ports:
      - "9001:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel
  
  composer:
    build:
      context: ./configs/composer
      dockerfile: Dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: composer_compose
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${PHPUSER:-www-data}
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel
  
  artisan:
    build:
      context: ./configs/php
      dockerfile: Dockerfile
      args:
        - PHPUSER=${PHPUSER:-www-data}
        - PHPGROUP=${PHPGROUP:-www-data}
    container_name: artisan_container
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
  
  redis:
    image: redis:alpine
    container_name: redis_container
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel
    volumes:
      - './redis:/data'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_container
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel